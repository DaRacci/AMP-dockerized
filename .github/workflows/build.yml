name: Build and Deploy

on: 
  create:
    tags:
      - "v[0-9]+-.+"
  push:
  pull_request:
  release:
    types: [released] 
  schedule:
    - cron: "0 * * * *" # Every hour
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - 
        name: Extract Branch Name
        id: extract_branch
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - 
        name: Download AMP Versions
        if: ${{ github.event_name == 'release' || github.event_name == 'schedule' }}
        run: wget https://cubecoders.com/AMPVersions.json -O /tmp/AMPVersions.json
      - 
        name: Parse Versions
        if: ${{ github.event_name == 'release' || github.event_name == 'schedule' }}
        run: |
          echo "LATEST_RELEASE_VERSION=$(git tag -l --sort=-creatordate | grep -E '^v?[0-9]+$' -m 1)" >> $GITHUB_ENV
          echo "AMP_CORE_VERSION=$(jq -r '.AMPCore' /tmp/AMPVersions.json | sed -e 's/\.//g')" >> $GITHUB_ENV
          echo "AMP_INST_MGR_VERSION=$(jq -r '.InstanceManagerCLI' /tmp/AMPVersions.json | sed -e 's/\.//g')" >> $GITHUB_ENV
      - 
        name: Create Tag
        if: ${{ github.event_name == 'release' || github.event_name == 'schedule' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          NEW_DEPLOY_TAG=$LATEST_RELEASE_VERSION-ampcore$AMP_CORE_VERSION-ampinstmgr$AMP_INST_MGR_VERSION
          git tag -a "$NEW_DEPLOY_TAG" -m "Auto Release Latest AMP Version" || { echo "Already up-to-date"; exit; }
          git push --follow-tags
          echo "DEPLOY_TAG=$NEW_DEPLOY_TAG" >> $GITHUB_ENV
      - 
        name: Extract Tag Name
        id: extract_tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: echo "DEPLOY_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - 
        name: Get Latest Tag
        id: latest_tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: echo "DEPLOY_TAG=$(git tag -l --sort=-creatordate | grep -E '^v[0-9]+-.+$' -m 1)" >> $GITHUB_ENV
      - 
        name: Is Tagged
        id: is_tagged
        shell: bash
        run: echo "##[set-output name=value;]$(echo $([ $DEPLOY_TAG ] && echo true || echo false))"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: amp-dockerized:latest
      - 
        name: Tag Docker for Production
        if: ${{ steps.is_tagged.outputs.value == 'true' }}
        run: |
          docker tag amp-dockerized:latest mitchtalmadge/amp-dockerized:latest 
          docker tag amp-dockerized:latest mitchtalmadge/amp-dockerized:$DEPLOY_TAG
          docker tag amp-dockerized:latest mitchtalmadge/amp-dockerized:`echo $DEPLOY_TAG | sed -nE 's/^(v[0-9]+)-.+$/\1/p'`
      - 
        name: Tag Docker for Staging
        if: ${{ startsWith(steps.extract_branch.outputs.branch, 'staging') }}
        run: docker tag amp-dockerized:latest mitchtalmadge/amp-dockerized:${{steps.extract_branch.outputs.branch}}
      - 
        name: Count Docker Tags
        id: count_tags
        run: echo "##[set-output name=tag_count;]$(echo `docker image ls mitchtalmadge/amp-dockerized -q | wc -l`)"
      -
        name: Login to Docker Hub
        if: ${{steps.count_tags.outputs.tag_count > 0}}
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Push to Docker Hub
        if: ${{steps.count_tags.outputs.tag_count > 0}}
        run: docker image push --all-tags mitchtalmadge/amp-dockerized